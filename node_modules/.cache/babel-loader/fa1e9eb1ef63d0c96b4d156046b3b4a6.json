{"ast":null,"code":"var _jsxFileName = \"/Users/msukhareva/Documents/projects/uma.tech.v2/src/components/Form/Result.jsx\";\nimport React, { Component } from \"react\";\nimport style from \"./result.scss\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport { withTranslation } from \"react-i18next\";\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      success: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [this.props.name]: event.target.value\n    });\n  }\n\n  componentDidUpdate() {\n    if (!this.props.isMobile) {\n      var pageHeight = document.querySelector(\"#apply\").getBoundingClientRect().height;\n      document.querySelector(\".pages\").style.height = \"\".concat(pageHeight + 207, \"px\");\n    }\n  }\n\n  render() {\n    const t = this.props.t;\n    const requestNumber = this.props.requestNumber;\n    const successStatus = this.props.success;\n    const errors = this.props.errors;\n\n    if (successStatus) {\n      return React.createElement(\"div\", {\n        className: \"outer_block_result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inner_block_result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, i18n.t(\"dataApply.success_text1\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, i18n.t(\"dataApply.success_text2\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" \", \"#\".concat(requestNumber))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, i18n.t(\"dataApply.success_text3\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, i18n.t(\"dataApply.success_text4\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, i18n.t(\"dataApply.success_text5\"), \" \", React.createElement(\"a\", {\n        href: \"mailto:support@pixelsfest.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"support@pixelsfest.com\"))));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"outer_block_result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner_block_result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, errors.map((error, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"result-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, error))));\n  }\n\n}\n\nexport default withTranslation()(Result);","map":{"version":3,"sources":["/Users/msukhareva/Documents/projects/uma.tech.v2/src/components/Form/Result.jsx"],"names":["React","Component","style","i18n","useTranslation","initReactI18next","withTranslation","Result","constructor","props","state","success","handleChange","bind","event","setState","name","target","value","componentDidUpdate","isMobile","pageHeight","document","querySelector","getBoundingClientRect","height","render","t","requestNumber","successStatus","errors","map","error","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,eAAjD;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACC,SAA3B,CAAqC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAAE,OAAC,KAAKN,KAAL,CAAWO,IAAZ,GAAmBF,KAAK,CAACG,MAAN,CAAaC;AAAlC,KAAd;AACH;;AACDC,EAAAA,kBAAkB,GAAG;AACjB,QAAI,CAAC,KAAKV,KAAL,CAAWW,QAAhB,EAA0B;AACtB,UAAIC,UAAU,GAAGC,QAAQ,CACpBC,aADY,CACE,QADF,EAEZC,qBAFY,GAEYC,MAF7B;AAGAH,MAAAA,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCrB,KAAjC,CAAuCuB,MAAvC,aAAmDJ,UAAU,GACzD,GADJ;AAEH;AACJ;;AAEDK,EAAAA,MAAM,GAAG;AAAA,UACGC,CADH,GACS,KAAKlB,KADd,CACGkB,CADH;AAEL,UAAMC,aAAa,GAAG,KAAKnB,KAAL,CAAWmB,aAAjC;AACA,UAAMC,aAAa,GAAG,KAAKpB,KAAL,CAAWE,OAAjC;AACA,UAAMmB,MAAM,GAAG,KAAKrB,KAAL,CAAWqB,MAA1B;;AACA,QAAID,aAAJ,EAAmB;AACf,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM1B,IAAI,CAACwB,CAAL,2BAAN,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKxB,IAAI,CAACwB,CAAL,2BADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAYC,aAAZ,EAFJ,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMzB,IAAI,CAACwB,CAAL,2BAAN,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIxB,IAAI,CAACwB,CAAL,2BAAJ,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKxB,IAAI,CAACwB,CAAL,2BADL,EACwC,GADxC,EAEI;AAAG,QAAA,IAAI,EAAC,+BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,CARJ,CADJ,CADJ;AAmBH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KACR;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KADL,CADH,CADL,CADJ,CADJ;AAWH;;AAxDgC;;AA0DrC,eAAe1B,eAAe,GAAGC,MAAH,CAA9B","sourcesContent":["import React, { Component } from \"react\";\nimport style from \"./result.scss\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport { withTranslation } from \"react-i18next\";\n\nclass Result extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { success: true };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({ [this.props.name]: event.target.value });\n    }\n    componentDidUpdate() {\n        if (!this.props.isMobile) {\n            var pageHeight = document\n                .querySelector(\"#apply\")\n                .getBoundingClientRect().height;\n            document.querySelector(\".pages\").style.height = `${pageHeight +\n                207}px`;\n        }\n    }\n\n    render() {\n        const { t } = this.props;\n        const requestNumber = this.props.requestNumber;\n        const successStatus = this.props.success;\n        const errors = this.props.errors;\n        if (successStatus) {\n            return (\n                <div className=\"outer_block_result\">\n                    <div className=\"inner_block_result\">\n                        <div>{i18n.t(`dataApply.success_text1`)}</div>\n                        <div>\n                            {i18n.t(`dataApply.success_text2`)}\n                            <span> {`#${requestNumber}`}</span>\n                        </div>\n                        <div>{i18n.t(`dataApply.success_text3`)}</div>\n                        <p>{i18n.t(`dataApply.success_text4`)}</p>\n                        <p>\n                            {i18n.t(`dataApply.success_text5`)}{\" \"}\n                            <a href=\"mailto:support@pixelsfest.com\">\n                                support@pixelsfest.com\n                            </a>\n                        </p>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"outer_block_result\">\n                <div className=\"inner_block_result\">\n                    {errors.map((error, index) => (\n                        <div key={index} className=\"result-error\">\n                            {error}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\nexport default withTranslation()(Result);\n"]},"metadata":{},"sourceType":"module"}